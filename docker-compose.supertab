# -*- mode: shell-script; mode: flyspell-prog; mode: electric-pair; ispell-local-dictionary: "american" -*-

### docker-compose.supertab --- List of docker-compose commands run through the
###                             super setuid wrapper.

### Copyright (C) 2015 António P. P. Almeida <appa@perusio.net>

### Author: António P. P. Almeida <appa@perusio.net>

### Permission is hereby granted, free of charge, to any person obtaining a
### copy of this software and associated documentation files (the "Software"),
### to deal in the Software without restriction, including without limitation
### the rights to use, copy, modify, merge, publish, distribute, sublicense,
### and/or sell copies of the Software, and to permit persons to whom the
### Software is furnished to do so, subject to the following conditions:

### The above copyright notice and this permission notice shall be included in
### all copies or substantial portions of the Software.

### Except as contained in this notice, the name(s) of the above copyright
### holders shall not be used in advertising or otherwise to promote the sale,
### use or other dealings in this Software without prior written authorization.

### THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
### IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
### FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
### THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
### LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
### FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
### DEALINGS IN THE SOFTWARE.

## Builds docker containers, given a branch.
## Example :  '$super docker-build luq.io/base:<branchname>'.
dc-build "/usr/bin/docker-compose build" \
         info="Builds or rebuilds the services specified in the compose file." \
         $docker_users

## Runs a set of services as specified in the docker compose file.
dc-run "/usr/bin/docker-compose run -d" \
       info="Runs the services specified in compose file." \
       $docker_users

## Start a container, given a docker container ID.
dc-start "/usr/bin/docker-compose start" \
         info="Starts the services specified in the compose file." \
         $docker_users

## Stops the services specified in the compose file.
dc-stop "/usr/bin/docker-compose stop" \
        info="Stops the services specified in the compose file." \
        $docker_users

## Sets the number of containers to run for a service.
dc-scale "/usr/bin/docker-compose stop" \
         info="Stops the services specified in the compose file." \
         $docker_users

## Removes stopped service containers.
dc-rm "/usr/bin/docker-compose rm" \
      info="Removes stopped service containers." \
      $docker_users

## Restart the services.
dc-restart "/usr/bin/docker-compose rrestart" \
           info="Restart the services specified in the compose file." \
           $docker_users

## Builds, (re)creates, starts, and attaches to containers for a service.
dc-up "/usr/bin/docker-compose up" \
      info="Builds, (re)creates, starts, and attaches to containers for a service." \
      $docker_users

## Executes a given command.
dc-pull "/usr/bin/docker-compose exec" \
        info="Execute a given command on a running container." \
        $docker_users

## List containers, running and not running.
dc-ps "/usr/bin/docker-compose ps" \
      info="List containers." \
      $docker_users

## Forces running containers to stop by sending a SIGKILL
## signal. Optionally the signal can be passed, for example:
## docker-compose kill -s SIGINT.
dc-kill "/usr/bin/docker-compose kill" \
        info="Send a signal to running services: SIGKILL by default: '-s <signal>'." \
        $docker_users

## Prints the public port for a port binding.
dc-port "/usr/bin/docker-compose port" \
        info="Prints the port for port binding." \
        $docker_users

## Display the logs from the running services.
dc-logs "/usr/bin/docker-compose logs" \
        info="Shows the logs from the running services." \
        $docker_users
